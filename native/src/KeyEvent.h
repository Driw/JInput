
#ifndef _KEYEVENT_H_
#define _KEYEVENT_H_

#include <jni.h>

enum VirtualKey
{
	WK_UNDEFINED = 0x0,
	WK_LBUTTON = 0x01,
	WK_RBUTTON = 0x02,
	WK_CANCEL = 0x03,
	WK_MBUTTON = 0x04,
	WK_XBUTTON1 = 0x05,
	WK_XBUTTON2 = 0x06,
	WK_BACK = 0x08,
	WK_TAB = 0x09,
	WK_CLEAR = 0x0C,
	WK_RETURN = 0x0D,
	WK_SHIFT = 0x10,
	WK_CONTROL = 0x11,
	WK_MENU = 0x12,
	WK_PAUSE = 0x13,
	WK_CAPITAL = 0x14,
	WK_KANA = 0x15,
	WK_HANGUEL = 0x15,
	WK_HANGUL = 0x15,
	WK_JUNJA = 0x17,
	WK_FINAL = 0x18,
	WK_HANJA = 0x19,
	WK_KANJI = 0x19,
	WK_ESCAPE = 0x1B,
	WK_CONVERT = 0x1C,
	WK_NONCONVERT = 0x1D,
	WK_ACCEPT = 0x1E,
	WK_MODECHANGE = 0x1F,
	WK_SPACE = 0x20,
	WK_PRIOR = 0x21,
	WK_NEXT = 0x22,
	WK_END = 0x23,
	WK_HOME = 0x24,
	WK_LEFT = 0x25,
	WK_UP = 0x26,
	WK_RIGHT = 0x27,
	WK_DOWN = 0x28,
	WK_SELECT = 0x29,
	WK_PRINT = 0x2A,
	WK_EXECUTE = 0x2B,
	WK_SNAPSHOT = 0x2C,
	WK_INSERT = 0x2D,
	WK_DELETE = 0x2E,
	WK_HELP = 0x2F,
	WK_0 = 0x30,
	WK_1 = 0x31,
	WK_2 = 0x32,
	WK_3 = 0x33,
	WK_4 = 0x34,
	WK_5 = 0x35,
	WK_6 = 0x36,
	WK_7 = 0x37,
	WK_8 = 0x38,
	WK_9 = 0x39,
	WK_A = 0x41,
	WK_B = 0x42,
	WK_C = 0x43,
	WK_D = 0x44,
	WK_E = 0x45,
	WK_F = 0x46,
	WK_G = 0x47,
	WK_H = 0x48,
	WK_I = 0x49,
	WK_J = 0x4A,
	WK_K = 0x4B,
	WK_L = 0x4C,
	WK_M = 0x4D,
	WK_N = 0x4E,
	WK_O = 0x4F,
	WK_P = 0x50,
	WK_Q = 0x51,
	WK_R = 0x52,
	WK_S = 0x53,
	WK_T = 0x54,
	WK_U = 0x55,
	WK_V = 0x56,
	WK_W = 0x57,
	WK_X = 0x58,
	WK_Y = 0x59,
	WK_Z = 0x5A,
	WK_LWIN = 0x5B,
	WK_RWIN = 0x5C,
	WK_APPS = 0x5D,
	WK_SLEEP = 0x5F,
	WK_NUMPAD0 = 0x60,
	WK_NUMPAD1 = 0x61,
	WK_NUMPAD2 = 0x62,
	WK_NUMPAD3 = 0x63,
	WK_NUMPAD4 = 0x64,
	WK_NUMPAD5 = 0x65,
	WK_NUMPAD6 = 0x66,
	WK_NUMPAD7 = 0x67,
	WK_NUMPAD8 = 0x68,
	WK_NUMPAD9 = 0x69,
	WK_MULTIPLY = 0x6A,
	WK_ADD = 0x6B,
	WK_SEPARATOR = 0x6C,
	WK_SUBTRACT = 0x6D,
	WK_DECIMAL = 0x6E,
	WK_DIVIDE = 0x6F,
	WK_F1 = 0x70,
	WK_F2 = 0x71,
	WK_F3 = 0x72,
	WK_F4 = 0x73,
	WK_F5 = 0x74,
	WK_F6 = 0x75,
	WK_F7 = 0x76,
	WK_F8 = 0x77,
	WK_F9 = 0x78,
	WK_F10 = 0x79,
	WK_F11 = 0x7A,
	WK_F12 = 0x7B,
	WK_F13 = 0x7C,
	WK_F14 = 0x7D,
	WK_F15 = 0x7E,
	WK_F16 = 0x7F,
	WK_F17 = 0x80,
	WK_F18 = 0x81,
	WK_F19 = 0x82,
	WK_F20 = 0x83,
	WK_F21 = 0x84,
	WK_F22 = 0x85,
	WK_F23 = 0x86,
	WK_F24 = 0x87,
	WK_NUMLOCK = 0x90,
	WK_SCROLL = 0x91,
	WK_LSHIFT = 0xA0,
	WK_RSHIFT = 0xA1,
	WK_LCONTROL = 0xA2,
	WK_RCONTROL = 0xA3,
	WK_LMENU = 0xA4,
	WK_RMENU = 0xA5,
	WK_BROWSER_BACK = 0xA6,
	WK_BROWSER_FORWARD = 0xA7,
	WK_BROWSER_REFRESH = 0xA8,
	WK_BROWSER_STOP = 0xA9,
	WK_BROWSER_SEARCH = 0xAA,
	WK_BROWSER_FAVORITES = 0xAB,
	WK_BROWSER_HOME = 0xAC,
	WK_VOLUME_MUTE = 0xAD,
	WK_VOLUME_DOWN = 0xAE,
	WK_VOLUME_UP = 0xAF,
	WK_MEDIA_NEXT_TRACK = 0xB0,
	WK_MEDIA_PREV_TRACK = 0xB1,
	WK_MEDIA_STOP = 0xB2,
	WK_MEDIA_PLAY_PAUSE = 0xB3,
	WK_LAUNCH_MAIL = 0xB4,
	WK_LAUNCH_MEDIA_SELECT = 0xB5,
	WK_LAUNCH_APP1 = 0xB6,
	WK_LAUNCH_APP2 = 0xB7,
	WK_OEM_1 = 0xBA,
	WK_OEM_PLUS = 0xBB,
	WK_OEM_COMMA = 0xBC,
	WK_OEM_MINUS = 0xBD,
	WK_OEM_PERIOD = 0xBE,
	WK_OEM_2 = 0xBF,
	WK_OEM_3 = 0xC0,
	WK_OEM_9 = 0xC1,
	WK_OEM_4 = 0xDB,
	WK_OEM_5 = 0xDC,
	WK_OEM_6 = 0xDD,
	WK_OEM_7 = 0xDE,
	WK_OEM_8 = 0xDF,
	WK_OEM_102 = 0xE2,
	WK_PROCESSKEY = 0xE5,
	WK_PACKET = 0xE7,
	WK_ATTN = 0xF6,
	WK_CRSEL = 0xF7,
	WK_EXSEL = 0xF8,
	WK_EREOF = 0xF9,
	WK_PLAY = 0xFA,
	WK_ZOOM = 0xFB,
	WK_NONAME = 0xFC,
	WK_PA1 = 0xFD,
	WK_OEM_CLEAR = 0xFE
};

enum Key
{
	KEY_UNDEFINED,
	KEY_ESCAPE,
	KEY_TAB,
	KEY_CAPSLOCK,
	KEY_RIGHT_WINDOW,
	KEY_LEFT_WINDOW,
	KEY_RIGHT_SHIFT,
	KEY_LEFT_SHIFT,
	KEY_RIGHT_CONTROL,
	KEY_LEFT_CONTROL,
	KEY_LEFT_ALT,
	KEY_RIGHT_ALT,
	KEY_PRINT_SCREEN,
	KEY_SCROLL_LOCK,
	KEY_PAUSE_BREAK,
	KEY_INSERT,
	KEY_BACKSPACE,
	KEY_HOME,
	KEY_END,
	KEY_PAGE_UP,
	KEY_PAGE_DOWN,
	KEY_ENTER,
	KEY_UP,
	KEY_DOWN,
	KEY_LEFT,
	KEY_RIGHT,
	KEY_DELETE,
	KEY_SPACE,
	KEY_NUMLOCK,
	KEY_DIVIDE,
	KEY_MULTIPLY,
	KEY_SUB,
	KEY_ADD,
	KEY_DECIMAL,
	KEY_SEPARATOR,
	KEY_NUMPAD_ENTER,
	KEY_NUMPAD_0,
	KEY_NUMPAD_1,
	KEY_NUMPAD_2,
	KEY_NUMPAD_3,
	KEY_NUMPAD_4,
	KEY_NUMPAD_5,
	KEY_NUMPAD_6,
	KEY_NUMPAD_7,
	KEY_NUMPAD_8,
	KEY_NUMPAD_9,
	KEY_0,
	KEY_1,
	KEY_2,
	KEY_3,
	KEY_4,
	KEY_5,
	KEY_6,
	KEY_7,
	KEY_8,
	KEY_9,
	KEY_A,
	KEY_B,
	KEY_C,
	KEY_D,
	KEY_E,
	KEY_F,
	KEY_G,
	KEY_H,
	KEY_I,
	KEY_J,
	KEY_K,
	KEY_L,
	KEY_M,
	KEY_N,
	KEY_O,
	KEY_P,
	KEY_Q,
	KEY_R,
	KEY_S,
	KEY_T,
	KEY_U,
	KEY_V,
	KEY_X,
	KEY_W,
	KEY_Y,
	KEY_Z,
	KEY_F1,
	KEY_F2,
	KEY_F3,
	KEY_F4,
	KEY_F5,
	KEY_F6,
	KEY_F7,
	KEY_F8,
	KEY_F9,
	KEY_F10,
	KEY_F11,
	KEY_F12,
	KEY_F13,
	KEY_F14,
	KEY_F15,
	KEY_F16,
	KEY_F17,
	KEY_F18,
	KEY_F19,
	KEY_F20,
	KEY_F21,
	KEY_F22,
	KEY_F23,
	KEY_F24,
	KEY_CEDILLA,
	KEY_COLON,
	KEY_QUOTE,
	KEY_ACUTE,
	KEY_RIGHT_BRACKET,
	KEY_LEFT_BRACKET,
	KEY_TILDE,
	KEY_SLASH,
	KEY_BACK_SLASH,
	KEY_PLUS,
	KEY_MINUS,
	KEY_COMMA,
	KEY_PERIOD,
	KEY_APPLICATIONS,
};

enum Character
{
	CH_NULL,
	CH_START_OF_HEADING,
	CH_START_OF_TEXT,
	CH_END_OF_TEXT,
	CH_END_OF_TRANSMISSION,
	CH_ENQUIRY,
	CH_ACKNOWLEDGE,
	CH_BELL,
	CH_BACKSPACE,
	CH_HORIZONTAL_TABULATION,
	CH_NEW_LINE,
	CH_VERTICAL_TABULATION,
	CH_FOR_FEED,
	CH_CARRIAGE_RETURN,
	CH_SHIFT_OUT,
	CH_SHIFT_IN,
	CH_DATA_LINK_ESCAPE,
	CH_DEVICE_CONTROL_ONE,
	CH_DEVICE_CONTROL_TWO,
	CH_DEVICE_CONTROL_THREE,
	CH_DEVICE_CONTROL_FOUR,
	CH_NEGATIVE_ACKNOWLEDGE,
	CH_SYNCHRONOUS_IDLE,
	CH_END_OF_TRANSMISSION_BLOCK,
	CH_CANCEL,
	CH_END_OF_MEDIUM,
	CH_SUBSTITUTE,
	CH_ESCAPE,
	CH_FILE_SEPARATOR,
	CH_GROUP_SEPARATOR,
	CH_RECORD_SEPARATOR,
	CH_UNIT_SEPARATOR,
	CH_SPACE,
	CH_EXCLAMATION_MARK,
	CH_QUOTATION_MARK,
	CH_NUMBER_SIGN,
	CH_DOLLAR_SIGN,
	CH_PERCENT_SIGN,
	CH_AMPERSAND,
	CH_APORTROPHE,
	CH_LEFT_PARENTHESIS,
	CH_RIGHT_PARENTHESIS,
	CH_ASTERISK,
	CH_PLUS_SIGN,
	CH_COMMA,
	CH_HYPHEN,
	CH_FULL_STOP,
	CH_SOLIDUS,
	CH_DIGIT_0,
	CH_DIGIT_1,
	CH_DIGIT_2,
	CH_DIGIT_3,
	CH_DIGIT_4,
	CH_DIGIT_5,
	CH_DIGIT_6,
	CH_DIGIT_7,
	CH_DIGIT_8,
	CH_DIGIT_9,
	CH_COLON,
	CH_SEMICOLON,
	CH_LESS,
	CH_EQUALS,
	CH_GREATER,
	CH_QUESTION_MARK,
	CH_COMMERCIAL_AT,
	CH_CAPITAL_LETTER_A,
	CH_CAPITAL_LETTER_B,
	CH_CAPITAL_LETTER_C,
	CH_CAPITAL_LETTER_D,
	CH_CAPITAL_LETTER_E,
	CH_CAPITAL_LETTER_F,
	CH_CAPITAL_LETTER_G,
	CH_CAPITAL_LETTER_H,
	CH_CAPITAL_LETTER_I,
	CH_CAPITAL_LETTER_J,
	CH_CAPITAL_LETTER_K,
	CH_CAPITAL_LETTER_L,
	CH_CAPITAL_LETTER_M,
	CH_CAPITAL_LETTER_N,
	CH_CAPITAL_LETTER_O,
	CH_CAPITAL_LETTER_P,
	CH_CAPITAL_LETTER_Q,
	CH_CAPITAL_LETTER_R,
	CH_CAPITAL_LETTER_S,
	CH_CAPITAL_LETTER_T,
	CH_CAPITAL_LETTER_U,
	CH_CAPITAL_LETTER_V,
	CH_CAPITAL_LETTER_X,
	CH_CAPITAL_LETTER_W,
	CH_CAPITAL_LETTER_Y,
	CH_CAPITAL_LETTER_Z,
	CH_LEFT_SQUARE_BRACKET,
	CH_REVERSE_SOLIDUS,
	CH_RIGHT_SQUARE_BRACKET,
	CH_CIRCUMFLEX_ACCENT,
	CH_LOW_LINE,
	CH_GRAVE_ACCENT,
	CH_SMALL_LETTER_A,
	CH_SMALL_LETTER_B,
	CH_SMALL_LETTER_C,
	CH_SMALL_LETTER_D,
	CH_SMALL_LETTER_E,
	CH_SMALL_LETTER_F,
	CH_SMALL_LETTER_G,
	CH_SMALL_LETTER_H,
	CH_SMALL_LETTER_I,
	CH_SMALL_LETTER_J,
	CH_SMALL_LETTER_K,
	CH_SMALL_LETTER_L,
	CH_SMALL_LETTER_M,
	CH_SMALL_LETTER_N,
	CH_SMALL_LETTER_O,
	CH_SMALL_LETTER_P,
	CH_SMALL_LETTER_Q,
	CH_SMALL_LETTER_R,
	CH_SMALL_LETTER_S,
	CH_SMALL_LETTER_T,
	CH_SMALL_LETTER_U,
	CH_SMALL_LETTER_V,
	CH_SMALL_LETTER_X,
	CH_SMALL_LETTER_W,
	CH_SMALL_LETTER_Y,
	CH_SMALL_LETTER_Z,
	CH_LEFT_CURLY_BRACKET,
	CH_VERTICAL_LINE,
	CH_RIGHT_CURLY_BRACKET,
	CH_TILDE,
	CH_DELETE,
	CH_CONTROL_1,
	CH_CONTROL_2,
	CH_BREAK_PERMITTED_HERE,
	CH_NO_BREAK_HERE,
	CH_CONTROL_IND,
	CH_NEXT_LINE,
	CH_START_OF_SELECTED_AREA,
	CH_END_OF_SELECTED_AREA,
	CH_CHARACTER_TABULATION_SET,
	CH_CHARACTER_TABULATION_JUSTIFICATION,
	CH_LINE_TABULATION_SET,
	CH_PARTIAL_LINE_FORWARD,
	CH_PARTIAL_LINE_BACKWARD,
	CH_REVERSE_LINE_FEED,
	CH_SINGLE_SHIFT_TWO,
	CH_SINGLE_SHIFT_THREE,
	CH_DEVICE_CONTROL_STRING,
	CH_PRIVATE_USE_ONE,
	CH_PRIVETE_USE_TWO,
	CH_SET_TRASMIT_STATE,
	CH_CANCEL_CHARACTER,
	CH_MESSAGE_WAITING,
	CH_START_OF_GUARDED_AREA,
	CH_END_OF_GUARDED_AREA,
	CH_START_OF_STRING,
	CH_CONTROL_3,
	CH_STRING_CHARACTER_INTRODUCER,
	CH_CONTROL_SEQUENCE_INTRODUCER,
	CH_STRING_TERMINATOR,
	CH_OPERATION_SYSTEM_COMMAND,
	CH_PRIVACY_MESSAGE,
	CH_APPLICATION_PROGRAM_COMMAND,
	CH_NO_BREAK_SPACE,
	CH_INVERTED_EXCLAMATION_MARK,
	CH_CENT_SIGN,
	CH_POUND_SIGN,
	CH_CURRENCY_SIGN,
	CH_YEN_SIGN,
	CH_BROKEN_BAR,
	CH_SELECTION_SIGN,
	CH_DIARESIS,
	CH_COPYRIGHT_SIGN,
	CH_FEMININE_ORDINAL_INDICATOR,
	CH_LEFTPOINTING_DOUBLE_ANGLE_QUOTATION_MARK,
	CH_NOT_SIGN,
	CH_SOFT_HYPHEN,
	CH_REGISTERED_SIGN,
	CH_MACRON,
	CH_DEGREE_SIGN,
	CH_PLUS_MINUS_SIGN,
	CH_SUPERSCRIPT_TWO,
	CH_SUPERSCRIPT_THREE,
	CH_ACUTE_ACCENT,
	CH_MICRO_SIGN,
	CH_PILCROW_SIGN,
	CH_MIDDLE_DOT,
	CH_CEDILLA,
	CH_SUPERSCRIPT_ONE,
	CH_MASCULINE_ORDINAL_INDICATOR,
	CH_RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK,
	CH_VULGAR_FRACTION_ONE_QUARTER,
	CH_VULGAR_FRACTION_ONE_HALF,
	CH_VULGAR_FRACTION_THREE_QUARTERS,
	CH_INVERTED_QUESTION_MARK,
	CH_CAPITAL_LETTER_A_GRAVE,
	CH_CAPITAL_LETTER_A_ACUTE,
	CH_CAPITAL_LETTER_A_CIRCUMFLEX,
	CH_CAPITAL_LETTER_A_TILDE,
	CH_CAPITAL_LETTER_A_DIAERESIS,
	CH_CAPITAL_LETTER_A_RING_ABOVE,
	CH_CAPITAL_LETTER_AE,
	CH_CAPITAL_LETTER_CEDILLA,
	CH_CAPITAL_LETTER_E_GRAVE,
	CH_CAPITAL_LETTER_E_ACUTE,
	CH_CAPITAL_LETTER_E_CIRCUMFLEX,
	CH_CAPITAL_LETTER_E_DIAERESIS,
	CH_CAPITAL_LETTER_I_GRAVE,
	CH_CAPITAL_LETTER_I_ACUTE,
	CH_CAPITAL_LETTER_I_CIRCUMFLEX,
	CH_CAPITAL_LETTER_I_DIAERESIS,
	CH_CAPITAL_LETTER_ETH,
	CH_CAPITAL_LETTER_N_TILDE,
	CH_CAPITAL_LETTER_O_GRAVE,
	CH_CAPITAL_LETTER_O_ACUTE,
	CH_CAPITAL_LETTER_O_CIRCUMFLEX,
	CH_CAPITAL_LETTER_O_TILDE,
	CH_CAPITAL_LETTER_O_DIAERESIS,
	CH_MULTIPLICATION_SIGN,
	CH_CAPITAL_LETTER_O_STROKE,
	CH_CAPITAL_LETTER_U_GRAVE,
	CH_CAPITAL_LETTER_U_ACUTE,
	CH_CAPITAL_LETTER_U_CIRCUMFLEX,
	CH_CAPITAL_LETTER_U_DIAERESIS,
	CH_CAPITAL_LETTER_Y_ACUTE,
	CH_CAPITAL_LETTER_THORN,
	CH_CAPITAL_LETTER_SHARP_S,
	CH_SMALL_LETTER_A_GRAVE,
	CH_SMALL_LETTER_A_ACUTE,
	CH_SMALL_LETTER_A_CIRCUMFLEX,
	CH_SMALL_LETTER_A_TILDE,
	CH_SMALL_LETTER_A_DIAERESIS,
	CH_SMALL_LETTER_A_RING_ABOVE,
	CH_SMALL_LETTER_AE,
	CH_SMALL_LETTER_CEDILLA,
	CH_SMALL_LETTER_E_GRAVE,
	CH_SMALL_LETTER_E_ACUTE,
	CH_SMALL_LETTER_E_CIRCUMFLEX,
	CH_SMALL_LETTER_E_DIAERESIS,
	CH_SMALL_LETTER_I_GRAVE,
	CH_SMALL_LETTER_I_ACUTE,
	CH_SMALL_LETTER_I_CIRCUMFLEX,
	CH_SMALL_LETTER_I_DIAERESIS,
	CH_SMALL_LETTER_ETH,
	CH_SMALL_LETTER_N_TILDE,
	CH_SMALL_LETTER_O_GRAVE,
	CH_SMALL_LETTER_O_ACUTE,
	CH_SMALL_LETTER_O_CIRCUMFLEX,
	CH_SMALL_LETTER_O_TILDE,
	CH_SMALL_LETTER_O_DIAERESIS,
	CH_DIVISION_SIGN,
	CH_SMALL_LETTER_0_STROKE,
	CH_SMALL_LETTER_U_GRAVE,
	CH_SMALL_LETTER_U_ACUTE,
	CH_SMALL_LETTER_U_CIRCUMFLEX,
	CH_SMALL_LETTER_U_DIAERESIS,
	CH_SMALL_LETTER_Y_ACUTE,
	CH_SMALL_LETTER_THORN,
	CH_SMALL_LETTER_Y_DIAERESIS
};

enum KeyPropertie
{
	KP_CAPITAL		= 0x01,
	KP_LEFT			= 0x02,
	KP_RIGHT		= 0x04,
	KP_SHIFT		= 0x08,
	KP_CONTROL		= 0x10,
	KP_ALTERNATIVE	= 0x20,
	KP_TRANSITION	= 0x40,
};

enum KeyType
{
	KEY_UNKNOW,
	KEY_TYPED,
	KEY_PRESSED,
	KEY_RELEASED
};

jobject parseKeyEvent(JNIEnv * env, KBDLLHOOKSTRUCT * key, jboolean transition, jint type);

#endif
